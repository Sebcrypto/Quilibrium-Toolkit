- name: Install Quilibrium node
  hosts: "{{ target }}"

  tasks:
    - become: true
      apt:
        name:
          - curl
        state: present

    - name: Check if node already installed
      stat:
        path: "{{ node_path }}"
      register: node_check
    - name: Stop playbook if node exists
      fail:
        msg: "Directory '{{ node_path }}' already exists. Playbook aborted."
      when: node_check.stat.exists

    - name: Update and upgrade apt packages
      include_role:
        name: roles/system/update-os
    - name: Install required packages
      include_role:
        name: roles/system/install-dependencies
    - name: Update sysctl
      include_role:
        name: roles/system/sysctl

    - name: Install go
      include_role:
        name: roles/system/install-go

    - name: Install Quilibrium node
      shell: |
        export GOROOT=/usr/local/go
        export GOPATH=$HOME/go
        export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
        source {{ ansible_env.HOME }}/.bashrc
        rm -rf {{ node_path }}
        mkdir -p {{ node_path }}
        cd {{ node_path }}
        git clone https://github.com/QuilibriumNetwork/ceremonyclient.git
        cd ceremonyclient
        git checkout release
        cd node

        \rm -f ./node*
        files=$(curl https://releases.quilibrium.com/release)
        for file in $files; do
            if ! test -f "./$file"; then
                curl "https://releases.quilibrium.com/$file" > "$file"
            fi
        done
        
        if [[ "$OSTYPE" == "linux-gnu"* ]]; then
          if [[ $(uname -m) == "aarch64"* ]]; then
            file=$(find . -type f -name "*linux*arm64" | head -n 1)
          else
            file=$(find . -type f -name "*linux*amd64" | head -n 1)
          fi
        elif [[ "$OSTYPE" == "darwin"* ]]; then
          file=$(find . -type f -name "*darwin*arm64" | head -n 1)
        else
          return 1
        fi

        if [ -n "$file" ]; then
            chmod +x $file
            ln -s $file ./node
        else
            return 1
        fi
      args:
        executable: /bin/bash

    - name: Check if node is installed
      stat:
        path: "{{ node_path }}"
      register: node_check
    - name: Fail if node installation fails
      fail:
        msg: "Error installing Quilibrium node."
      when: not node_check.stat.exists
    - name: Success message
      debug:
        msg: "Quilibrium node has been successfully installed."
      when: node_check.stat.exists

    - name: Create Quilibrium service
      include_role:
        name: roles/node/create_service

    - name: Start Quilibrium node
      include_role:
        name: roles/node/start_node

    - name: Pause for 30s
      pause:
        seconds: 30

    - name: Stop Quilibrium node
      include_role:
        name: roles/node/stop_node

    - name: Update node configuration
      include_role:
        name: roles/node/update_node_configuration
